import React, { useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import './RegisterPage.css';

function RegisterPage() {
  const [mail, setMail] = useState('');
  const [nickname, setNickname] = useState('');
  const [password, setPassord] = useState('');
  const [password2, setPassord2] = useState('');
  const [message, setMessage] = useState('');
  const navigate = useNavigate();
  const location = useLocation();

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ mail
  const validateMail = (mail) => {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(String(mail).toLowerCase());
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
  const handleRegister = async () => {
    if (!mail || !nickname || !password || !password2) {
      setMessage('–≤–≤–µ–¥–∏—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ!');
    } else if (!validateMail(mail)) {
      setMessage('–≤–≤–µ–¥–∏—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æüôÑ');
    } else if (password != password2) {
      setMessage('–ø–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!');
    } 
    else {
      try {
        const data = {
          mail: mail,
          nickname : nickname,
          password: password
        };
        console.log(data)
        
        const options = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data),
            credentials: "include",
            withCredentials: true
        };
        const response = await fetch(`http://localhost:8080/users`, options);
        if (response.status === 201) {
          navigate('/');
        } else if (response.status === 400) {
          setMessage('–≠—Ç–∞ –ø–æ—á—Ç–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è');
        }
        else {
          setMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
      } catch (error) {
        setMessage('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
      }
    }
  };

  setTimeout(() => {
    setMessage('');
  }, 4000);

  const handleMailChange = (e) => {
    setMail(e.target.value);
  };
  const handleNicknameChange = (e) => {
    setNickname(e.target.value);
  };
  const handlePasswordChange = (e) => {
    setPassord(e.target.value);
  };
  const handlePassword2Change = (e) => {
    setPassord2(e.target.value);
  };
  return (
    <div className="register-container">
      <div className="register-box">
        <a href="/" className="back-link">–Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
        <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ eSSay</h1>
        <div className="login-group">
          <p>–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?</p>
          <a href="/welcome" className="back-link-login">–í–æ–π—Ç–∏</a>
        </div>
        <form className="register-form">
          <input
            type="mail"
            placeholder="—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
            value={mail}
            onChange={handleMailChange}
            className={`input-field ${mail ? 'active' : ''}`}
          />
          <input
            type="nickname"
            placeholder="–Ω–∏–∫–Ω–µ–π–º"
            value={nickname}
            onChange={handleNicknameChange}
            className={`input-field ${nickname ? 'active' : ''}`}
          />
          <input
            type="password"
            placeholder="–ø–∞—Ä–æ–ª—å"
            value={password}
            onChange={handlePasswordChange}
            className={`input-field ${password ? 'active' : ''}`}
          />
          <input
            type="password"
            placeholder="–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
            value={password2}
            onChange={handlePassword2Change}
            className={`input-field ${password2 ? 'active' : ''}`}
          />
        </form>
        {message && <div className="message">{message}</div>}
        <button type="submit" onClick={handleRegister} className="register-button">–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
      </div>
    </div>
  );
}

export default RegisterPage;
